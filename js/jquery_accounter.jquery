/**
 * This software is governed by the CeCILL-B license. If a copy of this license
 * is not distributed with this file, you can obtain one at
 * http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt
 *
 * Author of Accounter: Bertrand THIERRY (bertrand.thierry1@gmail.com)
 *
*/

$(document).ready(function(){
  $("[id^=show_hide]").click(function(){
	 var target_id = '#' + $(this).attr('id') + '_target';
	 $(target_id).slideToggle("fast");
  });
});

$(document).ready(function() {
	$('.confirmation').on('click', function () {
		return confirm('Are you sure?');
	});
});


$(document).ready(function(){
		$("[id^=form_set_payment_date_]").each(function(){
				$(this).datepicker({ dateFormat: 'dd/mm/yy'});
		});
		$("[id^=form_edit_payment_date_]").each(function(){
				$(this).datepicker({ dateFormat: 'dd/mm/yy'});
		});
		$("[id=form_edit_account_date_of_expiration]").each(function(){
				$(this).datepicker({ dateFormat: 'dd/mm/yy'});
		});
});



/*
Keep panels collapsed or expanded.
Courtersy of Stackoverflow
http://stackoverflow.com/questions/33502419/saving-multiple-panels-collapsed-state-using-cookies-with-cookie
*/
$(".panel .panel-collapse").on('shown.bs.collapse', function ()
{
    var active = $(this).attr('id');
    var panelsIn= localStorage.panelsIn === undefined ? new Array() : JSON.parse(localStorage.panelsIn);
    if ($.inArray(active,panelsIn)==-1) //check that the element is not in the array
        panelsIn.push(active);
    localStorage.panelsIn=JSON.stringify(panelsIn);
});

$(".panel .panel-collapse").on('hidden.bs.collapse', function ()
{
    var active = $(this).attr('id');
    var panelsIn= localStorage.panelsIn === undefined ? new Array() : JSON.parse(localStorage.panelsIn);
    var elementIndex=$.inArray(active,panelsIn);
    if (elementIndex!==-1) //check the array
    {        
        panelsIn.splice(elementIndex,1); //remove item from array
    }
    localStorage.panelsIn=JSON.stringify(panelsIn); //save array on localStorage
});

$(".panel .panel-collapse.in").on('hidden.bs.collapse', function ()
{
    var active = $(this).attr('id');
    var panelsOut= localStorage.panelsOut === undefined ? new Array() : JSON.parse(localStorage.panelsOut);
    if ($.inArray(active,panelsOut)==-1) //check that the element is not in the array
        panelsOut.push(active);
    localStorage.panelsOut=JSON.stringify(panelsOut);
});

$(".panel .panel-collapse.in").on('shown.bs.collapse', function ()
{
    var active = $(this).attr('id');
    var panelsOut= localStorage.panelsOut === undefined ? new Array() : JSON.parse(localStorage.panelsOut);
    var elementIndex=$.inArray(active,panelsOut);
    if (elementIndex!==-1) //check the array
    {        
        panelsOut.splice(elementIndex,1); //remove item from array
    }
    localStorage.panelsOut=JSON.stringify(panelsOut); //save array on localStorage
});

$(document).ready(function () {
	var panelsIn=localStorage.panelsIn === undefined ? new Array() : JSON.parse(localStorage.panelsIn); //get all panels
		for (var i in panelsIn){ //<-- panel is the name of the cookie
			if ($("#"+panelsIn[i]).hasClass('panel-collapse')) // check if this is a panel
			{
					$("#"+panelsIn[i]).collapse("show");
			}
		}
});
	
$(document).ready(function () {
	var panelsOut=localStorage.panelsOut === undefined ? new Array() : JSON.parse(localStorage.panelsOut); //get all panels
	for (var i in panelsOut){ //<-- panel is the name of the cookie
		if ($("#"+panelsOut[i]).hasClass('panel-collapse')) // check if this is a panel
		{
				$("#"+panelsOut[i]).collapse("hide");
		}
	}
});
